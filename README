This file is part of CaloASCII-tester package
by André Rabello dos Anjos

$Id: README,v 1.3 2000/04/05 21:57:20 rabello Exp $

Introduction
------------

The aim of this package is to provide the user with tools (ANSI-C functions)
for analysing dumps of calorimeter digis in ASCII format. Such format is
defined in C by another library, called spec. This last library demands a
description file, not too complex, that is located in the 'src' subdir. Such a
description is the standard description available at CERN by J.Baines. You can
browse his page on datafiles and formats from:

http://hepunx.rl.ac.uk/atlasuk/simulation/level2/doc/ctrig/dumpfiles.html

All programs using the spec library must be compiled against the file
'libspec.a'.

Besides that, I've create the calorimeter library, which is composed of simple
functions that perform simple things like arranging the digis into trigger
towers and so. Some processing methods like flattening and Et evaluation are
also included as functions with simple calls. For that library I had to create
some special types as well. They are mostly for internal library use, with
exceptions, and you shouldn't have to bore a lot with those.  If you intend to
use such functions you will have to compile your programs against 'libcalo.a'
as well.

You can find the latest version of this library at my web site. For now, I only
have CVS access through the web for viewing, but a solution may be thought of
and package availability should be ok some weeks from today. Till there you can
request me the latest version of the package at Andre.dos.Anjos@cern.ch. In
order to access the web repository, you can point your browser to:

http://www.lps.ufrj.br/~rabello/cgi-bin/cvsweb

Building and installing
-----------------------

Very easy:

1) Unpack the distribution

gzip -c CaloASCII-tester.tar.gz | tar xvf -

or

tar xvfz CaloASCII-tester.tar.gz (if your tar executable suports this
				  simplified operation)

2) Edit the central Makefile. Change the WORKDIR variable to point to your
current distribution directory.

cd CaloASCII-tester; vi Makefile

3) Build

make all

This should be enough to compile the spec and calo libraries and build a small
application that can do some nice tricks with the ascii files. Basically, it
can show you how many events the file has or how many RoI's an event has. If
you select an event and an RoI, it can extract the Calo digis, pre-process and
give you a flatten version of this RoI, just ready for L2 processing. Such
application is called 'wrdata'. You can do

./wrdata -h

In order to get some processing options.

You can build another application as well, called 'test'. This application can
test an specific RoI for errors at the digis fields. This job may be important
if you're not sure of the reliability of you file. Just do:

make testfile

You can do

./test -h to see what you can do with it.

Ok, I think that's it for installation.

Data Files repository
---------------------

Currently the files are being extracted from hbooks containing all the
simulation data. There are repositories at CERN, but I've mirrored them to my
lab, and hopefully now they can be accessed through www:

http://www.lps.ufrj.br/~rabello/work

That's it for now. Have fun, if you can.

André Rabello dos Anjos.

